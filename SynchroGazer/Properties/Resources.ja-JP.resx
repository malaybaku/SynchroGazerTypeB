<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActionTypeDoubleClick" xml:space="preserve">
    <value>ダブルクリック</value>
  </data>
  <data name="ActionTypeHeader" xml:space="preserve">
    <value>視線アクションタイプ</value>
  </data>
  <data name="ActionTypeSingleClick" xml:space="preserve">
    <value>シングルクリック</value>
  </data>
  <data name="CharacterHeader" xml:space="preserve">
    <value>キャラクター</value>
  </data>
  <data name="CharacterPronamaChan" xml:space="preserve">
    <value>プロ生ちゃん</value>
  </data>
  <data name="CharacterQueryChan" xml:space="preserve">
    <value>クエリちゃん</value>
  </data>
  <data name="CharacterTohokuZunko" xml:space="preserve">
    <value>東北ずん子</value>
  </data>
  <data name="CloseDialogCancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="CloseDialogDescription" xml:space="preserve">
    <value>このウィンドウを閉じるとSynchroGazerが終了されます。終了しますか？「いいえ」を選択した場合、設定ウィンドウを最小化します。</value>
  </data>
  <data name="CloseDialogOK" xml:space="preserve">
    <value>はい</value>
  </data>
  <data name="CloseDialogOnlyMinimize" xml:space="preserve">
    <value>いいえ</value>
  </data>
  <data name="CloseDialogTitle" xml:space="preserve">
    <value>SynchroGazer : 終了</value>
  </data>
  <data name="ContactTabHeader" xml:space="preserve">
    <value>CONTACT</value>
  </data>
  <data name="CurrentStatusTabHeader" xml:space="preserve">
    <value>STATUS</value>
  </data>
  <data name="LanguageEnglish" xml:space="preserve">
    <value>英語</value>
  </data>
  <data name="LanguageHeader" xml:space="preserve">
    <value>言語(再起動で反映)</value>
  </data>
  <data name="LanguageJapanese" xml:space="preserve">
    <value>日本語</value>
  </data>
  <data name="LicenseSec1Headline" xml:space="preserve">
    <value>1. 本ソフトの使用</value>
  </data>
  <data name="LicenseSec1P1" xml:space="preserve">
    <value>SynchroGazer(以下、本ソフト)は、プログラムの使用者(以下、ユーザー)が、個人として非商用用途に使用することを想定し、無償で公開、配布されます。</value>
  </data>
  <data name="LicenseSec1P2" xml:space="preserve">
    <value>本ソフトの製作者自身は本ソフトの使用用途をとくに制限しませんが、ユーザーは本ライセンスに加えて「2. 第三者コンテンツの使用について」に示す各コンテンツについて使用範囲を理解した上で使う必要があります。例えば、本ソフトは「プロ生ちゃん」などを含むため、無断での商用利用はできません。もしユーザーが本ソフトの使用範囲を拡大したい場合、第三者コンテンツの各権利者から必要に応じて許諾を得てください。その際に本ソフトの製作者に対する許諾は必要ありません。</value>
  </data>
  <data name="LicenseSec2Headline" xml:space="preserve">
    <value>2. 第三者コンテンツの使用について</value>
  </data>
  <data name="LicenseSec2P1" xml:space="preserve">
    <value>本ソフトは下記のライセンスに従い、各コンテンツを使用します。ユーザーはこれらの規約についても理解した上で本ソフトを使用する必要があります。</value>
  </data>
  <data name="LicenseSec2PronamaChan" xml:space="preserve">
    <value>プロ生ちゃん</value>
  </data>
  <data name="LicenseSec2QueryChan" xml:space="preserve">
    <value>クエリちゃん</value>
  </data>
  <data name="LicenseSec2TobiiSDK" xml:space="preserve">
    <value>Tobii SDK (Interactionでの使用)</value>
  </data>
  <data name="LicenseSec2TohokuZunko" xml:space="preserve">
    <value>東北ずん子</value>
  </data>
  <data name="LicenseSec3Headline" xml:space="preserve">
    <value>3. 再頒布の制限について</value>
  </data>
  <data name="LicenseSec3P1" xml:space="preserve">
    <value>本ソフトの再頒布は推奨しませんが、再頒布行為は「1. 本ソフトの使用について」で言及する使用用途の範疇であるとします。つまり、「2. 第三者コンテンツの使用について」のライセンスをユーザーが参照し、規約上の問題点が解消できている場合、本ソフトの製作者は再頒布を制限しません。</value>
  </data>
  <data name="LicenseSec4Headline" xml:space="preserve">
    <value>4. 免責事項</value>
  </data>
  <data name="LicenseSec4P1" xml:space="preserve">
    <value>本ソフトのダウンロード、使用、また仮に行った場合は再頒布行為なども含む、本ソフトにかかわる行為に起因するいかなる問題に対しても、本ソフトの製作者は責任を負いかねます。</value>
  </data>
  <data name="LicenseTabHeader" xml:space="preserve">
    <value>ABOUT</value>
  </data>
  <data name="SettingsTabHeader" xml:space="preserve">
    <value>SETTING</value>
  </data>
  <data name="SettingWindowTitle" xml:space="preserve">
    <value>SynchroGazer - コントロールパネル</value>
  </data>
  <data name="CharacterDisplay" xml:space="preserve">
    <value>キャラクター表示</value>
  </data>
  <data name="CharacterDisplayLocation" xml:space="preserve">
    <value>表示位置</value>
  </data>
  <data name="CharacterDisplaySizeRate" xml:space="preserve">
    <value>表示サイズ(%)</value>
  </data>
  <data name="StatusInfoHeader" xml:space="preserve">
    <value>ステータス</value>
  </data>
  <data name="StatusInfoPresence" xml:space="preserve">
    <value>ユーザー検出</value>
  </data>
  <data name="StatusInfoEyes" xml:space="preserve">
    <value>両目の検出</value>
  </data>
  <data name="BlinkControlSettingDoubleClickInterval" xml:space="preserve">
    <value>ダブルクリック実行間隔(ms)</value>
  </data>
  <data name="BlinkControlSettingHeader" xml:space="preserve">
    <value>まばたき操作</value>
  </data>
  <data name="BlinkControlSettingOnlyWink" xml:space="preserve">
    <value>ウインク操作のみ許可</value>
  </data>
  <data name="BlinkControlSettingReverseMode" xml:space="preserve">
    <value>リバースモード</value>
  </data>
  <data name="MarkDisplayShowAnimationFeedback" xml:space="preserve">
    <value>操作時にアニメーション表示</value>
  </data>
  <data name="MarkDisplayShowFixTarget" xml:space="preserve">
    <value>視点固定マークを表示</value>
  </data>
  <data name="MarkDisplayShowLargeIconAlways" xml:space="preserve">
    <value>円形アイコンをつねに表示</value>
  </data>
  <data name="UdpClientExplanation" xml:space="preserve">
    <value>SynchroGazerは実際には2つのプログラム(WPF/Unity)で構成されており、プログラム間通信のためにUDP通信を用いています。通信のエンドポイントはループバックアドレスです。</value>
  </data>
  <data name="UdpClientExplanationHeader" xml:space="preserve">
    <value>注: UDPポートの設定がある理由について</value>
  </data>
  <data name="UdpClientSetting" xml:space="preserve">
    <value>接続 (再起動で反映)</value>
  </data>
  <data name="UdpClientSettingUnityToWpf" xml:space="preserve">
    <value>UDP Port2 (unity to wpf)</value>
  </data>
  <data name="UdpClientSettingWpfToUnity" xml:space="preserve">
    <value>UDP Port1 (wpf to unity)</value>
  </data>
  <data name="CharacterDisplayScreenNumber" xml:space="preserve">
    <value>ディスプレイ番号</value>
  </data>
</root>