//------------------------------------------------------------------------------
// <auto-generated>
//     このコードはツールによって生成されました。
//     ランタイム バージョン:4.0.30319.42000
//
//     このファイルへの変更は、以下の状況下で不正な動作の原因になったり、
//     コードが再生成されるときに損失したりします。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Baku.SynchroGazer.Properties {
    using System;
    
    
    /// <summary>
    ///   ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
    /// </summary>
    // このクラスは StronglyTypedResourceBuilder クラスが ResGen
    // または Visual Studio のようなツールを使用して自動生成されました。
    // メンバーを追加または削除するには、.ResX ファイルを編集して、/str オプションと共に
    // ResGen を実行し直すか、または VS プロジェクトをビルドし直します。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Baku.SynchroGazer.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
        ///   現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Double Click に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ActionTypeDoubleClick {
            get {
                return ResourceManager.GetString("ActionTypeDoubleClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Action Type に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ActionTypeHeader {
            get {
                return ResourceManager.GetString("ActionTypeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Single Click に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ActionTypeSingleClick {
            get {
                return ResourceManager.GetString("ActionTypeSingleClick", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Double Click Interval (ms) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlinkControlSettingDoubleClickInterval {
            get {
                return ResourceManager.GetString("BlinkControlSettingDoubleClickInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Blink Control に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlinkControlSettingHeader {
            get {
                return ResourceManager.GetString("BlinkControlSettingHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Allow Wink Only に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlinkControlSettingOnlyWink {
            get {
                return ResourceManager.GetString("BlinkControlSettingOnlyWink", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Reverse Mode に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string BlinkControlSettingReverseMode {
            get {
                return ResourceManager.GetString("BlinkControlSettingReverseMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Character Display Setting に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CharacterDisplay {
            get {
                return ResourceManager.GetString("CharacterDisplay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Location on screen に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CharacterDisplayLocation {
            get {
                return ResourceManager.GetString("CharacterDisplayLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Display Number に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CharacterDisplayScreenNumber {
            get {
                return ResourceManager.GetString("CharacterDisplayScreenNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Size(%) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CharacterDisplaySizeRate {
            get {
                return ResourceManager.GetString("CharacterDisplaySizeRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Character に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CharacterHeader {
            get {
                return ResourceManager.GetString("CharacterHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pronama Chan に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CharacterPronamaChan {
            get {
                return ResourceManager.GetString("CharacterPronamaChan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Query Chan に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CharacterQueryChan {
            get {
                return ResourceManager.GetString("CharacterQueryChan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tohoku Zunko に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CharacterTohokuZunko {
            get {
                return ResourceManager.GetString("CharacterTohokuZunko", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cancel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseDialogCancel {
            get {
                return ResourceManager.GetString("CloseDialogCancel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   By closing this window, all SynchroGazer application will shut down. Close anyway? If you click &quot;No&quot;, this window is minimized. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseDialogDescription {
            get {
                return ResourceManager.GetString("CloseDialogDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Yes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseDialogOK {
            get {
                return ResourceManager.GetString("CloseDialogOK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   No に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseDialogOnlyMinimize {
            get {
                return ResourceManager.GetString("CloseDialogOnlyMinimize", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SynchroGazer : Quit に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CloseDialogTitle {
            get {
                return ResourceManager.GetString("CloseDialogTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   CONTACT に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string ContactTabHeader {
            get {
                return ResourceManager.GetString("ContactTabHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   STATUS に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string CurrentStatusTabHeader {
            get {
                return ResourceManager.GetString("CurrentStatusTabHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   English に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LanguageEnglish {
            get {
                return ResourceManager.GetString("LanguageEnglish", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Language (Apply by restart) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LanguageHeader {
            get {
                return ResourceManager.GetString("LanguageHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Japanese に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LanguageJapanese {
            get {
                return ResourceManager.GetString("LanguageJapanese", resourceCulture);
            }
        }
        
        /// <summary>
        ///   1. Usage に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec1Headline {
            get {
                return ResourceManager.GetString("LicenseSec1Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Synchrogazer (&quot;Software&quot;) is free (but partly closed-source) software for the non-profit use by the individual users. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec1P1 {
            get {
                return ResourceManager.GetString("LicenseSec1P1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   The creator does not restrict the usage of the Software, but users have to obey the licences referred in &quot;2. About Third Party contents.&quot; に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec1P2 {
            get {
                return ResourceManager.GetString("LicenseSec1P2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   2. About Third Party Contents に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec2Headline {
            get {
                return ResourceManager.GetString("LicenseSec2Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   This software includes the third party contents, and their license are as follows. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec2P1 {
            get {
                return ResourceManager.GetString("LicenseSec2P1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Pronama Chan に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec2PronamaChan {
            get {
                return ResourceManager.GetString("LicenseSec2PronamaChan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Query Chan に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec2QueryChan {
            get {
                return ResourceManager.GetString("LicenseSec2QueryChan", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tobii SDK (Interaction Use) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec2TobiiSDK {
            get {
                return ResourceManager.GetString("LicenseSec2TobiiSDK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Tohoku Zunko に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec2TohokuZunko {
            get {
                return ResourceManager.GetString("LicenseSec2TohokuZunko", resourceCulture);
            }
        }
        
        /// <summary>
        ///   3. Restriction of the redistribution に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec3Headline {
            get {
                return ResourceManager.GetString("LicenseSec3Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Basically user cannot redistribute the software. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec3P1 {
            get {
                return ResourceManager.GetString("LicenseSec3P1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   4. Disclaimer に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec4Headline {
            get {
                return ResourceManager.GetString("LicenseSec4Headline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseSec4P1 {
            get {
                return ResourceManager.GetString("LicenseSec4P1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   ABOUT に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string LicenseTabHeader {
            get {
                return ResourceManager.GetString("LicenseTabHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show Animation Feedback に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MarkDisplayShowAnimationFeedback {
            get {
                return ResourceManager.GetString("MarkDisplayShowAnimationFeedback", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show Fixed Target に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MarkDisplayShowFixTarget {
            get {
                return ResourceManager.GetString("MarkDisplayShowFixTarget", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Show Large Circle Mark に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string MarkDisplayShowLargeIconAlways {
            get {
                return ResourceManager.GetString("MarkDisplayShowLargeIconAlways", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SETTINGS に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingsTabHeader {
            get {
                return ResourceManager.GetString("SettingsTabHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SynchroGazer - Control Panel に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string SettingWindowTitle {
            get {
                return ResourceManager.GetString("SettingWindowTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Eyes に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StatusInfoEyes {
            get {
                return ResourceManager.GetString("StatusInfoEyes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Current Status に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StatusInfoHeader {
            get {
                return ResourceManager.GetString("StatusInfoHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Presence に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string StatusInfoPresence {
            get {
                return ResourceManager.GetString("StatusInfoPresence", resourceCulture);
            }
        }
        
        /// <summary>
        ///   SynchroGazer consists of 2 softwares (WPF and Unity), so they have to communicate to achieve show some motion, or synchronize the setting. The setting here is to use the UDP communication between 2 programs. This 2 UDPs target to the loopback address. に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UdpClientExplanation {
            get {
                return ResourceManager.GetString("UdpClientExplanation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Why UDP Setting? に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UdpClientExplanationHeader {
            get {
                return ResourceManager.GetString("UdpClientExplanationHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Connection (Apply by restart) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UdpClientSetting {
            get {
                return ResourceManager.GetString("UdpClientSetting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   UDP Port2 (unity to wpf) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UdpClientSettingUnityToWpf {
            get {
                return ResourceManager.GetString("UdpClientSettingUnityToWpf", resourceCulture);
            }
        }
        
        /// <summary>
        ///   UDP Port1 (wpf to unity) に類似しているローカライズされた文字列を検索します。
        /// </summary>
        public static string UdpClientSettingWpfToUnity {
            get {
                return ResourceManager.GetString("UdpClientSettingWpfToUnity", resourceCulture);
            }
        }
    }
}
